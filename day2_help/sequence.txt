Today's topics
Note for Linux / Mac Users
Revision
Continue with Scanner
Java Data Types
Overview of Java Memory areas.(Overview of JVM Architecture)
Enter OOPs  -- encapsulation , data hiding
(class programming)
Understand java object creation along with memory pictures



Revision
Why Java ?
How does java support platform independence?
Answer this!
Can u write a java class w/o main & compile it ?
Can u write a java class w/o main & run it ?
What are legal access specifiers for members(data members & methods)? -- private / no / protected /public
Which are applicable to classes ? --- default / public

Can a java src file contain multiple default classes ? : 
Can a java src file contain multiple public  classes ?
Any rules regarding def. class name & src file name ?
Any rules regarding public class name & src file name ?
Naming Norms 



Java Data Types 
refer to diagram 

1. primitive data types 
boolean,char,byte,short,long,float,double

What is unicode ?
refer to diagram

2. reference types
class type , array type , interface type

Pointers vs java references
 Pointer arithmatic is not allowed in java.
reference --- holds internal representation of address (equivalent to object pointer in c++)

Conversions regarding primitive types : javac

Automatic conversions(widening ) ---Automatic promotions
byte--->short--->int---> long--->float--->double
char ---> int

long --->float ---is considered automatic type of conversion(since float data type can hold larger range of values than long data type)


Rules ---
src & dest - must be compatible, typically dest data type must be able to store larger magnitude of values than  that of src data type.

1. Any arithmetic operation involving byte,short  --- automatically promoted to --int

2. int & long ---> long
3. long & float ---> float
4. byte,short......& float & double----> double

Narrowing conversion --- forced conversion(type-casting)
eg --- 
double ---> int 
float --> long
double ---> float 

Solve : Testers for primitive types


H.W : Revise operators & control structures from : Java tutorial slides.


Refer : regarding class n object

Objective 1.  Create Java application for the following
1.1 Create a class to represent 3D Box.Provide tight encapsulation
Data members(instance variables=state) -width,height,depth : double --- private

1.2 Add a constructor-  to init state of a Box

1.3 
Add business logic in instance Methods
1. To return Box details in string form (dims of Box)
method declaration --- access specifier , ret type , name , args
method definition --body
eg : String getBoxDetails()
{...}
2. To return computed volume of the box.
eg : double computeVolume()
{....}

1.4 Create a TestBox class , which allows user to supply 3 dimensions  as user i/ps via scanner. Create Box object & display its dimensions & display volume.

Draw n understand memeory pics.

